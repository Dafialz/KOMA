import { fetchBookings, deleteBooking } from './bookings.js';

// –ó–∞—Ö–∏—Å—Ç —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ç–∞ —à–∞–ø–∫–∞
guard.protect();
const me = guard.getSession();
const myName  = guard.emailToName(me.email) || '–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç';
const myEmail = String(me.email || '').toLowerCase();
document.getElementById('meLine').textContent = `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: ${myEmail} (${myName})`;
document.getElementById('y').textContent = new Date().getFullYear();
document.getElementById('logout').onclick = () => guard.logout();

const listEl  = document.getElementById('list');
const emptyEl = document.getElementById('empty');
const errEl   = document.getElementById('error');
const spinEl  = document.getElementById('spin');
const refreshBtn = document.getElementById('refresh');

function fmt(date, time) {
  // YYYY-MM-DD -> DD.MM.YYYY HH:MM
  const p = date.split('-');
  return `${p[2]}.${p[1]}.${p[0]} ${time}`;
}

// –ø—Ä–æ—Å—Ç–∏–π –µ—Å–∫–µ–π–ø –¥–ª—è —ñ–º–µ–Ω —Ñ–∞–π–ª—ñ–≤
function escapeHtml(s){
  return String(s).replace(/[&<>"']/g, c => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[c]));
}

function render(items) {
  listEl.innerHTML = '';
  if (!items.length) { emptyEl.style.display='block'; errEl.style.display='none'; return; }
  emptyEl.style.display='none'; errEl.style.display='none';

  // –°–æ—Ä—Ç—É—î–º–æ –∑–∞ –¥–∞—Ç–æ—é/—á–∞—Å–æ–º (–Ω–∞–π–±–ª–∏–∂—á—ñ –≤–≥–æ—Ä—ñ)
  items.sort((a,b) => (a.date+a.time).localeCompare(b.date+b.time));

  for (const b of items) {
    const div = document.createElement('div');
    div.className = 'item';
    div.innerHTML = `
      <div>
        <div class="when">${fmt(b.date, b.time)}</div>
        <div><strong>${b.fullName}</strong> ${b.email ? `‚Ä¢ <a href="mailto:${b.email}">${b.email}</a>` : ''}</div>
        ${b.note ? `<div class="muted">${b.note}</div>` : ''}

        ${b.fileUrl ? `
          <div class="fileline">
            <span class="muted">–ü—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π —Ñ–∞–π–ª:</span>
            <a class="filebtn" href="${b.fileUrl}" target="_blank" rel="noopener" download>
              üìé –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —á–µ–∫${b.fileName ? ` (${escapeHtml(b.fileName)})` : ''}
            </a>
          </div>
        ` : ''}
      </div>
      <div class="row">
        <a class="btn ghost" href="video.html?room=${encodeURIComponent(myName)}" target="_blank" rel="noopener">–ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –≤—ñ–¥–µ–æ—á–∞—Ç—É</a>
        <button class="btn gray" data-id="${b.id}">–ó–∞–≤–µ—Ä—à–∏—Ç–∏</button>
      </div>
    `;

    div.querySelector('button[data-id]').onclick = async (e) => {
      const id = e.currentTarget.getAttribute('data-id');
      try {
        e.currentTarget.disabled = true;
        await deleteBooking(id);
        await load();
      } catch {
        e.currentTarget.disabled = false;
        alert('–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–ø–∏—Å. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
      }
    };

    listEl.appendChild(div);
  }
}

async function load(showSpinner=true){
  try {
    if(showSpinner) spinEl.style.display = 'inline-block';
    const { list } = await fetchBookings(myEmail);
    render(Array.isArray(list) ? list : []);
  } catch {
    listEl.innerHTML = '';
    emptyEl.style.display='none';
    errEl.style.display='block';
  } finally {
    spinEl.style.display = 'none';
  }
}

refreshBtn.onclick = () => load();

// –ø–µ—Ä–≤–∏–Ω–Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è + –º‚Äô—è–∫–µ –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è
await load(false);
setInterval(load, 60*1000);
